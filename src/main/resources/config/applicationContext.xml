<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
	
	<context:annotation-config />
	<context:property-placeholder location="classpath:config/db.properties"/>
	<!-- 配置数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${driver}"></property>
		<property name="url" value="${url}"></property>
		<property name="username" value="${username}"></property>
		<property name="password" value="${password}"></property>
		
		<!-- 初始化连接 -->
		<property name="initialSize" value="10" />
		<!-- 最大空闲连接 -->
		<property name="maxIdle" value="20" />
		<!-- 最小空闲连接 -->
		<property name="minIdle" value="20" />
		<!-- 最大连接数量 -->
		<property name="maxActive" value="50" />
		<!-- 是否在自动回收超时连接的时候打印连接的超时错误 -->
		<property name="logAbandoned" value="true" />
		<!-- 是否自动回收超时连接 -->
		<property name="removeAbandoned" value="true" />
		<!--
			超时时间(以秒数为单位) 设置超时时间有一个要注意的地方，超时时间=现在的时间-程序中创建Connection的时间， 如果
			maxActive比较大，比如超过100，那么removeAbandonedTimeout可以设置长一点比如180，
			也就是三分钟无响应的连接进行 回收，当然应用的不同设置长度也不同。
		-->
		<property name="removeAbandonedTimeout" value="180" />
		<!-- 超时等待时间以毫秒为单位 
		maxWait代表当Connection用尽了，多久之后进行回收丢失连接-->
		<property name="maxWait" value="1000" />
	</bean>
	<context:component-scan base-package="com.yamata"></context:component-scan>
	
	
	
	
	<!-- 配置事务 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- define the SqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:config/mybatis-config.xml" />
		<!-- <property name="dialect" value="${dialect}" />-->
	</bean>
	<!--
		SpringMVC在超出上传文件限制时，会抛出org.springframework.web.multipart.MaxUploadSizeExceededException
	-->
	<!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中 -->
	<bean id="exceptionResolver"
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<!--
					遇到MaxUploadSizeExceededException异常时，自动跳转到/WEB-INF/views/error_fileupload.jsp页面
				-->
				<prop
					key="org.springframework.web.multipart.MaxUploadSizeExceededException">errorFileupload</prop>
			</props>
		</property>
	</bean>
	
	
	
</beans>